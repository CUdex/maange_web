pipeline {
  agent any
  environment {
    DOCKER_REGISTRY = "https://docker.io/cudex/manage_web"
    DOCKER_REPO_NAME = "cudex/manage_web"
  }
  stages {
    stage('Checkout') {
        steps {
            scmSkip(deleteBuild: true, skipPattern:'.*\\[cc\\].*')
        }
    }
    stage("Create BUILD_DATE") {
      steps {
        script {
          def date = new Date()
          def formattedDate = date.format("yyyyMMdd")
          env.BUILD_DATE = formattedDate

          test_version = "${DOCKER_REPO_NAME}:1.${env.BUILD_NUMBER}-${env.BUILD_DATE}"
        }
      }
    }
    stage("first ls check") {
      steps {
        sh 'ls -al'
      }
    }
    stage('Checkout') {
        steps {
            git branch: 'master', credentialsId: 'test', url: "https://github.com/CUdex/vmmanager.git"
        }
    }

    stage('Update file') {
        steps {
            script {
                    // 파일 내용 변경하기
                    def filePath = './web.yaml'
                    def fileContent = sh(script: "cat ${filePath}", returnStdout: true).trim()
                    def newContent = fileContent.replaceAll(/image: cudex\/manage_web:.*/, "image: ${test_version}")
                    sh "echo '${newContent}' > ${filePath}"
            }
        }
    }
    stage('push github repository') {
        steps {
                withCredentials([gitUsernamePassword(credentialsId: 'test', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                sh "git add ."
                sh "git commit -m '[ci skip] update version ${test_version}'"
                sh 'git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/CUdex/vmmanager.git'
            }
        }
    }
  }
}